open Batteries
;;
open Types
;;

let token_print o t =
  let s =
    match t with
    | EOF -> "EOF"
    | VarId -> "VarId"
    | ConId -> "ConId"
    | VarSym -> "VarSym"
    | ConSym -> "ConSym"
    | QVarId -> "QVarId"
    | QConId -> "QConId"
    | QVarSym -> "QVarSym"
    | QConSym -> "QConSym"
    | IntLit -> "IntLit"
    | FloatLit -> "FloatLit"
    | CharLit -> "CharLit"
    | StringLit -> "StringLit"
    | RCase -> "RCase"
    | RClass -> "RClass"
    | RData -> "RData"
    | RDefault -> "RDefault"
    | RDeriving -> "RDeriving"
    | RDo -> "RDo"
    | RElse -> "RElse"
    | RIf -> "RIf"
    | RImport -> "RImport"
    | RIn -> "RIn"
    | RInfix -> "RInfix"
    | RInfixl -> "RInfixl"
    | RInfixr -> "RInfixr"
    | RInstance -> "RInstance"
    | RLet -> "RLet"
    | RModule -> "RModule"
    | RNewtype -> "RNewtype"
    | ROf -> "ROf"
    | RThen -> "RThen"
    | RType -> "RType"
    | RWhere -> "RWhere"
    | RUnderscore -> "RUnderscore"
    | RDotDot -> "RDotDot"
    | RColon -> "RColon"
    | RColonColon -> "RColonColon"
    | REquals -> "REquals"
    | RBackslash -> "RBackslash"
    | RPipe -> "RPipe"
    | RLArrowDash -> "RLArrowDash"
    | RDashRArrow -> "RDashRArrow"
    | RAt -> "RAt"
    | RTilde -> "RTilde"
    | REqualsRArrow -> "REqualsRArrow"
    | LParen -> "LParen"
    | RParen -> "RParen"
    | LSquare -> "LSquare"
    | RSquare -> "RSquare"
    | LCurly -> "LCurly"
    | RCurly -> "RCurly"
    | Comma -> "Comma"
    | Semicolon -> "Semicolon"
    | Backquote -> "Backquote"
  in Printf.fprintf o "%s" s
;;

let lexeme_print o l =
  Printf.fprintf o "(%a \"%s\" src[%d:%d])"
    token_print l.token l.Types.contents l.startraw l.endraw
;;


let nonterm_print o nt =
  let s =
    match nt with
    | Goal -> "Goal"
    | NTmodule -> "module"
    | NTbody -> "body"
    | NTimpdecls -> "impdecls"
    | NTexports -> "exports"
    | NTexport -> "export"
    | NTimpdecl -> "impdecl"
    | NTimpspec -> "impspec"
    | NTimport -> "import"
    | NTcname -> "cname"
    | NTtopdecls -> "topdecls"
    | NTtopdecl -> "topdecl"
    | NTdecls -> "decls"
    | NTdecl -> "decl"
    | NTcdecls -> "cdecls"
    | NTcdecl -> "cdecl"
    | NTidecls -> "idecls"
    | NTidecl -> "idecl"
    | NTgendecl -> "gendecl"
    | NTops -> "ops"
    | NTvars -> "vars"
    | NTfixity -> "fixity"
    | NTtype -> "type"
    | NTbtype -> "btype"
    | NTatype -> "atype"
    | NTgtycon -> "gtycon"
    | NTcontext -> "context"
    | NTclass -> "class"
    | NTscontext -> "scontext"
    | NTsimpleclass -> "simpleclass"
    | NTsimpletype -> "simpletype"
    | NTconstrs -> "constrs"
    | NTconstr -> "constr"
    | NTnewconstr -> "newconstr"
    | NTfielddecl -> "fielddecl"
    | NTderiving -> "deriving"
    | NTdclass -> "dclass"
    | NTinst -> "inst"
    | NTfunlhs -> "funlhs"
    | NTrhs -> "rhs"
    | NTgdrhs -> "gdrhs"
    | NTgd -> "gd"
    | NTexp -> "exp"
    | NTinfixexp -> "infixexp"
    | NTexp10 -> "exp10"
    | NTfexp -> "fexp"
    | NTaexp -> "aexp"
    | NTqual -> "qual"
    | NTalts -> "alts"
    | NTalt -> "alt"
    | NTgdpat -> "gdpat"
    | NTstmts -> "stmts"
    | NTstmt -> "stmt"
    | NTfbind -> "fbind"
    | NTpat -> "pat"
    | NTinfixpat -> "infixpat"
    | NTpat10 -> "pat10"
    | NTapat -> "apat"
    | NTfpat -> "fpat"
    | NTgcon -> "gcon"
    | NTvar -> "var"
    | NTqvar -> "qvar"
    | NTcon -> "con"
    | NTqcon -> "qcon"
    | NTvarop -> "varop"
    | NTqvarop -> "qvarop"
    | NTconop -> "conop"
    | NTqconop -> "qconop"
    | NTop -> "op"
    | NTqop -> "qop"
    | NTgconsym -> "gconsym"
    | NTimpdecllist -> "impdecllist"
    | NTexportlist -> "exportlist"
    | NTcnamelist -> "cnamelist"
    | NTqvarlist -> "qvarlist"
    | NTimportlist -> "importlist"
    | NTtopdecllist -> "topdecllist"
    | NTvarlist -> "varlist"
    | NTtypelist -> "typelist"
    | NTcommalist -> "commalist"
    | NToplist -> "oplist"
    | NTclasslist -> "classlist"
    | NTsimpleclasslist -> "simpleclasslist"
    | NTconstrlist -> "constrlist"
    | NTfielddecllist -> "fielddecllist"
    | NTdclasslist -> "dclasslist"
    | NTexplist -> "explist"
    | NTquallist -> "quallist"
    | NTfbindlist -> "fbindlist"
    | NTfpatlist -> "fpatlist"
    | NTpatlist -> "patlist"
    | NTdecllist -> "decllist"
    | NTcdecllist -> "cdecllist"
    | NTidecllist -> "idecllist"
    | NTatypelist -> "atypelist"
    | NTtyvarlist -> "tyvarlist"
    | NTtyvarcommalist -> "tyvarcommalist"
    | NTapatlist -> "apatlist"
    | NTaltlist -> "altlist"
    | NTstmtlist -> "stmtlist"
    | NTtyvar -> "NTtyvar"
    | NTtycon -> "NTtycon"
    | NTtycls -> "NTtycls"
    | NTmodid -> "NTmodid"
    | NTqtycon -> "NTqtycon"
    | NTqtycls -> "NTqtycls"
    | NTliteral -> "NTliteral"
  in Printf.fprintf o "%s" s
;;

let ast0_print o _ =
  Printf.fprintf o "TODO" (* TODO *)
;;
